Task List
	Voting class
		UT it
	Python Orchestration util
		Launching on Iota
		Killing nodes in a known way
----------------------------------------
Need a logDB utility binary for reading the log for debugging
	Just include logdb.h and convert from (int argc, char* argv[]) to (command, ...)
Topology needs active node count
	No it doesn't, shut up
	We can connect to all other nodes' pubs, it won't panic
		What about byzantine faults
Votes with multiple nodes failing simultaneously
	N := Nominal System Size
	Na := Active System Size
	Va=1 Vc=2
	Failures = N/2-1
	First vote fails b/c Vc is never reached on first vote
	Second vote is on new state with N/2-1 failed nodes
Program execution
	Set-up and initialization
		Parse topology
		Init log
		Set-up ham
		Activate sockets on links
		Set-up poller
	Event loop
		Beat heart
		Poll sockets
		Handle events
		Pause until next hb event
	Error handling and shutdown
		Gracefully shutdown
		Announce failure to log
		Exit
----------------------------------------
Making zeroMQ work on compute-0-{0,1} 
	!!! THESE ARE WRONG, YOU CAN BUILD AN rpm FILE AND DISTRIBUTE (documented elsewhere) !!!
		./configure --prefix=/usr --libdir=/usr/lib64
		make
		ABOVE NOT NECESSARY UNLESS make clean has been run
		----------------------------------------
		sudo make install
		cd ../ADAM && gcc -lzmq -o zmqVersion zmqVersion.c && ./zmqVersion
		----------------------------------------
		Python 2.7.1: ./configure && make && make install
		ZeroMQ 2.1.7: ./configure AS ABOVE && make && make install
		pyzmq 2.1.7: python2.7 setup.py --zmq=/usr/lib64 install
		Test: python -c "import zmq"
